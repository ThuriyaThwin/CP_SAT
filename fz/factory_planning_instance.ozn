int: n_steps;
int: n_attributes;
int: n_products;
int: n_machines;
n_steps = 5;
set of int: steps = 1 .. n_steps;
var steps: last_step;
n_attributes = 3;
set of int: attributes = 1 .. n_attributes;
n_products = 2;
set of int: products = 1 .. n_products;
array[steps, products, attributes] of var 0 .. 1: step_prod_attr;
array[products, attributes] of 0 .. 1: prod_attr_goal;
prod_attr_goal = array2d(1 .. 2, 1 .. 3, [ 1, 1, 0, 1, 0, 1 ]);
n_machines = 5;
set of int: machines = 1 .. n_machines;
array[steps, products] of var machines: step_prod_mach;
array[machines, attributes] of 0 .. 1: can_add_attr;
can_add_attr = 
  array2d(1 .. 5, 1 .. 3, [ 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 ]);
array[machines, machines] of 0 .. 1: connected;
connected = 
  array2d(
    1 .. 5, 1 .. 5, 
    [ 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 
      1, 1 ]);
set of machines: output_machines;
output_machines = { 5 };
set of machines: input_machines;
input_machines = { 1 };
set of machines: work_machines = 
  machines diff (input_machines union output_machines);
array[products] of input_machines: prod_start_mach;
prod_start_mach = [ 1, 1 ];
output 
  [ "factory planning instance\n", "step | product | location | a1 a2 a3\n", 
    "-----+---------+----------+---------\n", " 1   | 1       | ", 
    show(step_prod_mach[1, 1]), "        |  ", 
    show(step_prod_attr[1, 1, 1]), "  ", show(step_prod_attr[1, 1, 2]), 
    "  ", show(step_prod_attr[1, 1, 3]), "\n", "     | 2       | ", 
    show(step_prod_mach[1, 2]), "        |  ", 
    show(step_prod_attr[1, 2, 1]), "  ", show(step_prod_attr[1, 2, 2]), 
    "  ", show(step_prod_attr[1, 2, 3]), "\n", 
    "-----+---------+----------+---------\n", " 2   | 1       | ", 
    show(step_prod_mach[2, 1]), "        |  ", 
    show(step_prod_attr[2, 1, 1]), "  ", show(step_prod_attr[2, 1, 2]), 
    "  ", show(step_prod_attr[2, 1, 3]), "\n", "     | 2       | ", 
    show(step_prod_mach[2, 2]), "        |  ", 
    show(step_prod_attr[2, 2, 1]), "  ", show(step_prod_attr[2, 2, 2]), 
    "  ", show(step_prod_attr[2, 2, 3]), "\n", 
    "-----+---------+----------+---------\n", " 3   | 1       | ", 
    show(step_prod_mach[3, 1]), "        |  ", 
    show(step_prod_attr[3, 1, 1]), "  ", show(step_prod_attr[3, 1, 2]), 
    "  ", show(step_prod_attr[3, 1, 3]), "\n", "     | 2       | ", 
    show(step_prod_mach[3, 2]), "        |  ", 
    show(step_prod_attr[3, 2, 1]), "  ", show(step_prod_attr[3, 2, 2]), 
    "  ", show(step_prod_attr[3, 2, 3]), "\n", 
    "-----+---------+----------+---------\n", " 4   | 1       | ", 
    show(step_prod_mach[4, 1]), "        |  ", 
    show(step_prod_attr[4, 1, 1]), "  ", show(step_prod_attr[4, 1, 2]), 
    "  ", show(step_prod_attr[4, 1, 3]), "\n", "     | 2       | ", 
    show(step_prod_mach[4, 2]), "        |  ", 
    show(step_prod_attr[4, 2, 1]), "  ", show(step_prod_attr[4, 2, 2]), 
    "  ", show(step_prod_attr[4, 2, 3]), "\n", 
    "-----+---------+----------+---------\n", " 5   | 1       | ", 
    show(step_prod_mach[5, 1]), "        |  ", 
    show(step_prod_attr[5, 1, 1]), "  ", show(step_prod_attr[5, 1, 2]), 
    "  ", show(step_prod_attr[5, 1, 3]), "\n", "     | 2       | ", 
    show(step_prod_mach[5, 2]), "        |  ", 
    show(step_prod_attr[5, 2, 1]), "  ", show(step_prod_attr[5, 2, 2]), 
    "  ", show(step_prod_attr[5, 2, 3]), "\n", 
    "-----+---------+----------+---------\n" ];
