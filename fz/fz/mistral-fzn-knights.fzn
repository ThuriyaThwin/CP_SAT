predicate all_different_int(array [int] of var int: x);
predicate cumulative(array [int] of var int: s, array [int] of var int: d, array [int] of var int: r, var int: b);
array [1..36] of set of int: neighbours = [{9, 14}, {10, 13, 15}, {7, 11, 14, 16}, {8, 12, 15, 17}, {9, 16, 18}, {10, 17}, {3, 15, 20}, {4, 16, 19, 21}, {1, 5, 13, 17, 20, 22}, {2, 6, 14, 18, 21, 23}, {3, 15, 22, 24}, {4, 16, 23}, {2, 9, 21, 26}, {1, 3, 10, 22, 25, 27}, {2, 4, 7, 11, 19, 23, 26, 28}, {3, 5, 8, 12, 20, 24, 27, 29}, {4, 6, 9, 21, 28, 30}, {5, 10, 22, 29}, {8, 15, 27, 32}, {7, 9, 16, 28, 31, 33}, {8, 10, 13, 17, 25, 29, 32, 34}, {9, 11, 14, 18, 26, 30, 33, 35}, {10, 12, 15, 27, 34, 36}, {11, 16, 28, 35}, {14, 21, 33}, {13, 15, 22, 34}, {14, 16, 19, 23, 31, 35}, {15, 17, 20, 24, 32, 36}, {16, 18, 21, 33}, {17, 22, 34}, {20, 27}, {19, 21, 28}, {20, 22, 25, 29}, {21, 23, 26, 30}, {22, 24, 27}, {23, 28}];
var set of 1..36: SET____1 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____10 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____11 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____12 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____13 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____14 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____15 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____16 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____17 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____18 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____19 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____2 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____20 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____21 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____22 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____23 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____24 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____25 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____26 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____27 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____28 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____29 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____3 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____30 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____31 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____32 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____33 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____34 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____35 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____4 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____5 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____6 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____7 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____8 :: is_defined_var :: var_is_introduced;
var set of 1..36: SET____9 :: is_defined_var :: var_is_introduced;
array [1..36] of var 1..36: p :: output_array([1..36]);
constraint all_different_int(p);
constraint array_set_element(p[1], neighbours, SET____1) :: defines_var(SET____1);
constraint array_set_element(p[10], neighbours, SET____10) :: defines_var(SET____10);
constraint array_set_element(p[11], neighbours, SET____11) :: defines_var(SET____11);
constraint array_set_element(p[12], neighbours, SET____12) :: defines_var(SET____12);
constraint array_set_element(p[13], neighbours, SET____13) :: defines_var(SET____13);
constraint array_set_element(p[14], neighbours, SET____14) :: defines_var(SET____14);
constraint array_set_element(p[15], neighbours, SET____15) :: defines_var(SET____15);
constraint array_set_element(p[16], neighbours, SET____16) :: defines_var(SET____16);
constraint array_set_element(p[17], neighbours, SET____17) :: defines_var(SET____17);
constraint array_set_element(p[18], neighbours, SET____18) :: defines_var(SET____18);
constraint array_set_element(p[19], neighbours, SET____19) :: defines_var(SET____19);
constraint array_set_element(p[2], neighbours, SET____2) :: defines_var(SET____2);
constraint array_set_element(p[20], neighbours, SET____20) :: defines_var(SET____20);
constraint array_set_element(p[21], neighbours, SET____21) :: defines_var(SET____21);
constraint array_set_element(p[22], neighbours, SET____22) :: defines_var(SET____22);
constraint array_set_element(p[23], neighbours, SET____23) :: defines_var(SET____23);
constraint array_set_element(p[24], neighbours, SET____24) :: defines_var(SET____24);
constraint array_set_element(p[25], neighbours, SET____25) :: defines_var(SET____25);
constraint array_set_element(p[26], neighbours, SET____26) :: defines_var(SET____26);
constraint array_set_element(p[27], neighbours, SET____27) :: defines_var(SET____27);
constraint array_set_element(p[28], neighbours, SET____28) :: defines_var(SET____28);
constraint array_set_element(p[29], neighbours, SET____29) :: defines_var(SET____29);
constraint array_set_element(p[3], neighbours, SET____3) :: defines_var(SET____3);
constraint array_set_element(p[30], neighbours, SET____30) :: defines_var(SET____30);
constraint array_set_element(p[31], neighbours, SET____31) :: defines_var(SET____31);
constraint array_set_element(p[32], neighbours, SET____32) :: defines_var(SET____32);
constraint array_set_element(p[33], neighbours, SET____33) :: defines_var(SET____33);
constraint array_set_element(p[34], neighbours, SET____34) :: defines_var(SET____34);
constraint array_set_element(p[35], neighbours, SET____35) :: defines_var(SET____35);
constraint array_set_element(p[4], neighbours, SET____4) :: defines_var(SET____4);
constraint array_set_element(p[5], neighbours, SET____5) :: defines_var(SET____5);
constraint array_set_element(p[6], neighbours, SET____6) :: defines_var(SET____6);
constraint array_set_element(p[7], neighbours, SET____7) :: defines_var(SET____7);
constraint array_set_element(p[8], neighbours, SET____8) :: defines_var(SET____8);
constraint array_set_element(p[9], neighbours, SET____9) :: defines_var(SET____9);
constraint int_eq(p[1], 1);
constraint int_eq(p[2], 9);
constraint int_eq(p[36], 14);
constraint set_in(p[2], SET____1);
constraint set_in(p[3], SET____2);
constraint set_in(p[4], SET____3);
constraint set_in(p[5], SET____4);
constraint set_in(p[6], SET____5);
constraint set_in(p[7], SET____6);
constraint set_in(p[8], SET____7);
constraint set_in(p[9], SET____8);
constraint set_in(p[10], SET____9);
constraint set_in(p[11], SET____10);
constraint set_in(p[12], SET____11);
constraint set_in(p[13], SET____12);
constraint set_in(p[14], SET____13);
constraint set_in(p[15], SET____14);
constraint set_in(p[16], SET____15);
constraint set_in(p[17], SET____16);
constraint set_in(p[18], SET____17);
constraint set_in(p[19], SET____18);
constraint set_in(p[20], SET____19);
constraint set_in(p[21], SET____20);
constraint set_in(p[22], SET____21);
constraint set_in(p[23], SET____22);
constraint set_in(p[24], SET____23);
constraint set_in(p[25], SET____24);
constraint set_in(p[26], SET____25);
constraint set_in(p[27], SET____26);
constraint set_in(p[28], SET____27);
constraint set_in(p[29], SET____28);
constraint set_in(p[30], SET____29);
constraint set_in(p[31], SET____30);
constraint set_in(p[32], SET____31);
constraint set_in(p[33], SET____32);
constraint set_in(p[34], SET____33);
constraint set_in(p[35], SET____34);
constraint set_in(p[36], SET____35);
solve  :: int_search(p, input_order, indomain_min, complete) satisfy;
