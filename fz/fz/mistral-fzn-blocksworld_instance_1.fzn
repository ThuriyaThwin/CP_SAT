predicate all_different_int(array [int] of var int: x);
predicate cumulative(array [int] of var int: s, array [int] of var int: d, array [int] of var int: r, var int: b);
array [1..3] of int: final_loc = [2, 3, 0];
array [1..3] of int: initial_loc = [2, 0, 1];
var bool: BOOL____1 :: is_defined_var :: var_is_introduced;
var bool: BOOL____10 :: is_defined_var :: var_is_introduced;
var bool: BOOL____11 :: is_defined_var :: var_is_introduced;
var bool: BOOL____12 :: is_defined_var :: var_is_introduced;
var bool: BOOL____13 :: is_defined_var :: var_is_introduced;
var bool: BOOL____14 :: is_defined_var :: var_is_introduced;
var bool: BOOL____15 :: is_defined_var :: var_is_introduced;
var bool: BOOL____16 :: is_defined_var :: var_is_introduced;
var bool: BOOL____17 :: is_defined_var :: var_is_introduced;
var bool: BOOL____18 :: is_defined_var :: var_is_introduced;
var bool: BOOL____19 :: is_defined_var :: var_is_introduced;
var bool: BOOL____2 :: is_defined_var :: var_is_introduced;
var bool: BOOL____20 :: is_defined_var :: var_is_introduced;
var bool: BOOL____21 :: is_defined_var :: var_is_introduced;
var bool: BOOL____22 :: is_defined_var :: var_is_introduced;
var bool: BOOL____23 :: is_defined_var :: var_is_introduced;
var bool: BOOL____24 :: is_defined_var :: var_is_introduced;
var bool: BOOL____25 :: is_defined_var :: var_is_introduced;
var bool: BOOL____26 :: is_defined_var :: var_is_introduced;
var bool: BOOL____27 :: is_defined_var :: var_is_introduced;
var bool: BOOL____28 :: is_defined_var :: var_is_introduced;
var bool: BOOL____29 :: is_defined_var :: var_is_introduced;
var bool: BOOL____3 :: is_defined_var :: var_is_introduced;
var bool: BOOL____30 :: is_defined_var :: var_is_introduced;
var bool: BOOL____31 :: is_defined_var :: var_is_introduced;
var bool: BOOL____32 :: is_defined_var :: var_is_introduced;
var bool: BOOL____33 :: is_defined_var :: var_is_introduced;
var bool: BOOL____34 :: is_defined_var :: var_is_introduced;
var bool: BOOL____35 :: is_defined_var :: var_is_introduced;
var bool: BOOL____36 :: is_defined_var :: var_is_introduced;
var bool: BOOL____37 :: is_defined_var :: var_is_introduced;
var bool: BOOL____38 :: is_defined_var :: var_is_introduced;
var bool: BOOL____39 :: is_defined_var :: var_is_introduced;
var bool: BOOL____4 :: is_defined_var :: var_is_introduced;
var bool: BOOL____40 :: is_defined_var :: var_is_introduced;
var bool: BOOL____41 :: is_defined_var :: var_is_introduced;
var bool: BOOL____42 :: is_defined_var :: var_is_introduced;
var bool: BOOL____43 :: is_defined_var :: var_is_introduced;
var bool: BOOL____44 :: is_defined_var :: var_is_introduced;
var bool: BOOL____45 :: is_defined_var :: var_is_introduced;
var bool: BOOL____46 :: is_defined_var :: var_is_introduced;
var bool: BOOL____47 :: is_defined_var :: var_is_introduced;
var bool: BOOL____48 :: is_defined_var :: var_is_introduced;
var bool: BOOL____49 :: is_defined_var :: var_is_introduced;
var bool: BOOL____5 :: is_defined_var :: var_is_introduced;
var bool: BOOL____50 :: is_defined_var :: var_is_introduced;
var bool: BOOL____51 :: is_defined_var :: var_is_introduced;
var bool: BOOL____52 :: is_defined_var :: var_is_introduced;
var bool: BOOL____53 :: is_defined_var :: var_is_introduced;
var bool: BOOL____54 :: is_defined_var :: var_is_introduced;
var bool: BOOL____55 :: is_defined_var :: var_is_introduced;
var bool: BOOL____56 :: is_defined_var :: var_is_introduced;
var bool: BOOL____57 :: is_defined_var :: var_is_introduced;
var bool: BOOL____58 :: is_defined_var :: var_is_introduced;
var bool: BOOL____59 :: is_defined_var :: var_is_introduced;
var bool: BOOL____6 :: is_defined_var :: var_is_introduced;
var bool: BOOL____60 :: is_defined_var :: var_is_introduced;
var bool: BOOL____61 :: is_defined_var :: var_is_introduced;
var bool: BOOL____62 :: is_defined_var :: var_is_introduced;
var bool: BOOL____63 :: is_defined_var :: var_is_introduced;
var bool: BOOL____64 :: is_defined_var :: var_is_introduced;
var bool: BOOL____65 :: is_defined_var :: var_is_introduced;
var bool: BOOL____66 :: is_defined_var :: var_is_introduced;
var bool: BOOL____67 :: is_defined_var :: var_is_introduced;
var bool: BOOL____68 :: is_defined_var :: var_is_introduced;
var bool: BOOL____69 :: is_defined_var :: var_is_introduced;
var bool: BOOL____7 :: is_defined_var :: var_is_introduced;
var bool: BOOL____70 :: is_defined_var :: var_is_introduced;
var bool: BOOL____71 :: is_defined_var :: var_is_introduced;
var bool: BOOL____72 :: is_defined_var :: var_is_introduced;
var bool: BOOL____73 :: is_defined_var :: var_is_introduced;
var bool: BOOL____74 :: is_defined_var :: var_is_introduced;
var bool: BOOL____75 :: is_defined_var :: var_is_introduced;
var bool: BOOL____76 :: is_defined_var :: var_is_introduced;
var bool: BOOL____77 :: is_defined_var :: var_is_introduced;
var bool: BOOL____78 :: is_defined_var :: var_is_introduced;
var bool: BOOL____79 :: is_defined_var :: var_is_introduced;
var bool: BOOL____8 :: is_defined_var :: var_is_introduced;
var bool: BOOL____80 :: is_defined_var :: var_is_introduced;
var bool: BOOL____81 :: is_defined_var :: var_is_introduced;
var bool: BOOL____82 :: is_defined_var :: var_is_introduced;
var bool: BOOL____83 :: is_defined_var :: var_is_introduced;
var bool: BOOL____84 :: is_defined_var :: var_is_introduced;
var bool: BOOL____85 :: is_defined_var :: var_is_introduced;
var bool: BOOL____86 :: is_defined_var :: var_is_introduced;
var bool: BOOL____87 :: is_defined_var :: var_is_introduced;
var bool: BOOL____88 :: is_defined_var :: var_is_introduced;
var bool: BOOL____89 :: is_defined_var :: var_is_introduced;
var bool: BOOL____9 :: is_defined_var :: var_is_introduced;
var bool: BOOL____90 :: is_defined_var :: var_is_introduced;
array [1..12] of var -3..3: on :: output_array([1..4, 1..3]);
constraint all_different_int([on[1], on[2], on[3]]);
constraint all_different_int([on[4], on[5], on[6]]);
constraint all_different_int([on[7], on[8], on[9]]);
constraint all_different_int([on[10], on[11], on[12]]);
constraint array_bool_and([BOOL____9, BOOL____4, BOOL____3, BOOL____2], BOOL____10) :: defines_var(BOOL____10);
constraint array_bool_and([BOOL____17, BOOL____11, BOOL____16], BOOL____18) :: defines_var(BOOL____18);
constraint array_bool_and([BOOL____19, BOOL____14, BOOL____13, BOOL____12], BOOL____20) :: defines_var(BOOL____20);
constraint array_bool_and([BOOL____21, BOOL____27, BOOL____26], BOOL____28) :: defines_var(BOOL____28);
constraint array_bool_and([BOOL____29, BOOL____24, BOOL____23, BOOL____22], BOOL____30) :: defines_var(BOOL____30);
constraint array_bool_and([BOOL____37, BOOL____36, BOOL____31], BOOL____38) :: defines_var(BOOL____38);
constraint array_bool_and([BOOL____39, BOOL____34, BOOL____33, BOOL____32], BOOL____40) :: defines_var(BOOL____40);
constraint array_bool_and([BOOL____47, BOOL____41, BOOL____46], BOOL____48) :: defines_var(BOOL____48);
constraint array_bool_and([BOOL____49, BOOL____44, BOOL____43, BOOL____42], BOOL____50) :: defines_var(BOOL____50);
constraint array_bool_and([BOOL____51, BOOL____57, BOOL____56], BOOL____58) :: defines_var(BOOL____58);
constraint array_bool_and([BOOL____59, BOOL____54, BOOL____53, BOOL____52], BOOL____60) :: defines_var(BOOL____60);
constraint array_bool_and([BOOL____67, BOOL____66, BOOL____61], BOOL____68) :: defines_var(BOOL____68);
constraint array_bool_and([BOOL____69, BOOL____64, BOOL____63, BOOL____62], BOOL____70) :: defines_var(BOOL____70);
constraint array_bool_and([BOOL____77, BOOL____71, BOOL____76], BOOL____78) :: defines_var(BOOL____78);
constraint array_bool_and([BOOL____7, BOOL____6, BOOL____1], BOOL____8) :: defines_var(BOOL____8);
constraint array_bool_and([BOOL____79, BOOL____74, BOOL____73, BOOL____72], BOOL____80) :: defines_var(BOOL____80);
constraint array_bool_and([BOOL____81, BOOL____87, BOOL____86], BOOL____88) :: defines_var(BOOL____88);
constraint array_bool_and([BOOL____89, BOOL____84, BOOL____83, BOOL____82], BOOL____90) :: defines_var(BOOL____90);
constraint array_bool_or([BOOL____18, BOOL____15], BOOL____19) :: defines_var(BOOL____19);
constraint array_bool_or([BOOL____28, BOOL____25], BOOL____29) :: defines_var(BOOL____29);
constraint array_bool_or([BOOL____38, BOOL____35], BOOL____39) :: defines_var(BOOL____39);
constraint array_bool_or([BOOL____48, BOOL____45], BOOL____49) :: defines_var(BOOL____49);
constraint array_bool_or([BOOL____58, BOOL____55], BOOL____59) :: defines_var(BOOL____59);
constraint array_bool_or([BOOL____68, BOOL____65], BOOL____69) :: defines_var(BOOL____69);
constraint array_bool_or([BOOL____78, BOOL____75], BOOL____79) :: defines_var(BOOL____79);
constraint array_bool_or([BOOL____88, BOOL____85], BOOL____89) :: defines_var(BOOL____89);
constraint array_bool_or([BOOL____8, BOOL____5], BOOL____9) :: defines_var(BOOL____9);
constraint bool_le(BOOL____1, BOOL____10);
constraint bool_le(BOOL____11, BOOL____20);
constraint bool_le(BOOL____21, BOOL____30);
constraint bool_le(BOOL____31, BOOL____40);
constraint bool_le(BOOL____41, BOOL____50);
constraint bool_le(BOOL____51, BOOL____60);
constraint bool_le(BOOL____61, BOOL____70);
constraint bool_le(BOOL____71, BOOL____80);
constraint bool_le(BOOL____81, BOOL____90);
constraint int_eq(on[1], 2);
constraint int_eq(on[2], -2);
constraint int_eq(on[3], 1);
constraint int_eq(on[10], 2);
constraint int_eq(on[11], 3);
constraint int_eq(on[12], -3);
constraint int_lt_reif(on[5], 0, BOOL____15) :: defines_var(BOOL____15);
constraint int_lt_reif(on[6], 0, BOOL____25) :: defines_var(BOOL____25);
constraint int_lt_reif(on[7], 0, BOOL____35) :: defines_var(BOOL____35);
constraint int_lt_reif(on[8], 0, BOOL____45) :: defines_var(BOOL____45);
constraint int_lt_reif(on[4], 0, BOOL____5) :: defines_var(BOOL____5);
constraint int_lt_reif(on[9], 0, BOOL____55) :: defines_var(BOOL____55);
constraint int_lt_reif(on[10], 0, BOOL____65) :: defines_var(BOOL____65);
constraint int_lt_reif(on[11], 0, BOOL____75) :: defines_var(BOOL____75);
constraint int_lt_reif(on[12], 0, BOOL____85) :: defines_var(BOOL____85);
constraint int_ne_reif(on[1], on[4], BOOL____1) :: defines_var(BOOL____1);
constraint int_ne_reif(on[2], on[5], BOOL____11) :: defines_var(BOOL____11);
constraint int_ne_reif(on[1], 2, BOOL____12) :: defines_var(BOOL____12);
constraint int_ne_reif(on[2], 2, BOOL____13) :: defines_var(BOOL____13);
constraint int_ne_reif(on[3], 2, BOOL____14) :: defines_var(BOOL____14);
constraint int_ne_reif(on[1], on[5], BOOL____16) :: defines_var(BOOL____16);
constraint int_ne_reif(on[3], on[5], BOOL____17) :: defines_var(BOOL____17);
constraint int_ne_reif(on[1], 1, BOOL____2) :: defines_var(BOOL____2);
constraint int_ne_reif(on[3], on[6], BOOL____21) :: defines_var(BOOL____21);
constraint int_ne_reif(on[1], 3, BOOL____22) :: defines_var(BOOL____22);
constraint int_ne_reif(on[2], 3, BOOL____23) :: defines_var(BOOL____23);
constraint int_ne_reif(on[3], 3, BOOL____24) :: defines_var(BOOL____24);
constraint int_ne_reif(on[1], on[6], BOOL____26) :: defines_var(BOOL____26);
constraint int_ne_reif(on[2], on[6], BOOL____27) :: defines_var(BOOL____27);
constraint int_ne_reif(on[2], 1, BOOL____3) :: defines_var(BOOL____3);
constraint int_ne_reif(on[4], on[7], BOOL____31) :: defines_var(BOOL____31);
constraint int_ne_reif(on[4], 1, BOOL____32) :: defines_var(BOOL____32);
constraint int_ne_reif(on[5], 1, BOOL____33) :: defines_var(BOOL____33);
constraint int_ne_reif(on[6], 1, BOOL____34) :: defines_var(BOOL____34);
constraint int_ne_reif(on[5], on[7], BOOL____36) :: defines_var(BOOL____36);
constraint int_ne_reif(on[6], on[7], BOOL____37) :: defines_var(BOOL____37);
constraint int_ne_reif(on[3], 1, BOOL____4) :: defines_var(BOOL____4);
constraint int_ne_reif(on[5], on[8], BOOL____41) :: defines_var(BOOL____41);
constraint int_ne_reif(on[4], 2, BOOL____42) :: defines_var(BOOL____42);
constraint int_ne_reif(on[5], 2, BOOL____43) :: defines_var(BOOL____43);
constraint int_ne_reif(on[6], 2, BOOL____44) :: defines_var(BOOL____44);
constraint int_ne_reif(on[4], on[8], BOOL____46) :: defines_var(BOOL____46);
constraint int_ne_reif(on[6], on[8], BOOL____47) :: defines_var(BOOL____47);
constraint int_ne_reif(on[6], on[9], BOOL____51) :: defines_var(BOOL____51);
constraint int_ne_reif(on[4], 3, BOOL____52) :: defines_var(BOOL____52);
constraint int_ne_reif(on[5], 3, BOOL____53) :: defines_var(BOOL____53);
constraint int_ne_reif(on[6], 3, BOOL____54) :: defines_var(BOOL____54);
constraint int_ne_reif(on[4], on[9], BOOL____56) :: defines_var(BOOL____56);
constraint int_ne_reif(on[5], on[9], BOOL____57) :: defines_var(BOOL____57);
constraint int_ne_reif(on[2], on[4], BOOL____6) :: defines_var(BOOL____6);
constraint int_ne_reif(on[7], on[10], BOOL____61) :: defines_var(BOOL____61);
constraint int_ne_reif(on[7], 1, BOOL____62) :: defines_var(BOOL____62);
constraint int_ne_reif(on[8], 1, BOOL____63) :: defines_var(BOOL____63);
constraint int_ne_reif(on[9], 1, BOOL____64) :: defines_var(BOOL____64);
constraint int_ne_reif(on[8], on[10], BOOL____66) :: defines_var(BOOL____66);
constraint int_ne_reif(on[9], on[10], BOOL____67) :: defines_var(BOOL____67);
constraint int_ne_reif(on[3], on[4], BOOL____7) :: defines_var(BOOL____7);
constraint int_ne_reif(on[8], on[11], BOOL____71) :: defines_var(BOOL____71);
constraint int_ne_reif(on[7], 2, BOOL____72) :: defines_var(BOOL____72);
constraint int_ne_reif(on[8], 2, BOOL____73) :: defines_var(BOOL____73);
constraint int_ne_reif(on[9], 2, BOOL____74) :: defines_var(BOOL____74);
constraint int_ne_reif(on[7], on[11], BOOL____76) :: defines_var(BOOL____76);
constraint int_ne_reif(on[9], on[11], BOOL____77) :: defines_var(BOOL____77);
constraint int_ne_reif(on[9], on[12], BOOL____81) :: defines_var(BOOL____81);
constraint int_ne_reif(on[7], 3, BOOL____82) :: defines_var(BOOL____82);
constraint int_ne_reif(on[8], 3, BOOL____83) :: defines_var(BOOL____83);
constraint int_ne_reif(on[9], 3, BOOL____84) :: defines_var(BOOL____84);
constraint int_ne_reif(on[7], on[12], BOOL____86) :: defines_var(BOOL____86);
constraint int_ne_reif(on[8], on[12], BOOL____87) :: defines_var(BOOL____87);
constraint set_in(on[1], {-1, 2, 3});
constraint set_in(on[2], {-2, 1, 3});
constraint set_in(on[3], {-3, 1, 2});
constraint set_in(on[4], {-1, 2, 3});
constraint set_in(on[5], {-2, 1, 3});
constraint set_in(on[6], {-3, 1, 2});
constraint set_in(on[7], {-1, 2, 3});
constraint set_in(on[8], {-2, 1, 3});
constraint set_in(on[9], {-3, 1, 2});
constraint set_in(on[10], {-1, 2, 3});
constraint set_in(on[11], {-2, 1, 3});
constraint set_in(on[12], {-3, 1, 2});
solve  :: int_search([on[1], on[2], on[3], on[4], on[5], on[6], on[7], on[8], on[9], on[10], on[11], on[12]], first_fail, indomain_split, complete) satisfy;
